services:
  peatio:
    restart: always
    image: "<%= @config['images']['peatio'] %>"
    environment:
      - VAULT_TOKEN=<%= @config['vault']['peatio_rails_token'] %>
    env_file:
      - ../config/kaigara.env
      - ../config/peatio.env
    volumes:
      - ../config/peatio/seed:/opt/peatio/config/seed
      - ../config/peatio/management_api_v1.yml:/opt/peatio/config/management_api.yml
      - ../config/peatio/plugins.yml:/opt/peatio/config/plugins.yml
      - ../config/peatio/abilities.yml:/opt/peatio/config/abilities.yml
    labels: {}
    command: bash -c "bin/link_config && kaigara bundle exec puma --config config/puma.rb"

  barong:
    restart: always
    image: "<%= @config['images']['barong'] %>"
    environment:
      - BARONG_VAULT_TOKEN=<%= @config['vault']['barong_token'] %>
    env_file:
      - ../config/kaigara.env
      - ../config/barong.env
    volumes:
      - ../config/secrets:/secrets:ro
      - ../config/barong/seeds.yml:/home/app/config/seeds.yml
      - ../config/barong/barong.yml:/home/app/config/barong.yml
      - ../config/barong/authz_rules.yml:/home/app/config/authz_rules.yml
      - ../config/barong/management_api.yml:/home/app/config/management_api.yml
      - ../config/barong/abilities.yml:/home/app/config/abilities.yml
    command: bash -c "kaigara bundle exec puma --config config/puma.rb"

  applogic:
    restart: always
    image: "<%= @config['images']['applogic'] %>"
    env_file:
      - ../config/applogic.env
      - ../config/kaigara.env
    volumes:
      - ../config/applogic/management_api_v2.yml:/home/app/config/management_api_v2.yml

  sonic:
    restart: always
    image: "<%= @config['images']['sonic'] %>"
    environment:
      - VAULT_TOKEN=<%= @config['vault']['sonic_token'] %>
    env_file:
      - ../config/sonic.env
      - ../config/kaigara.env
    entrypoint: /bin/sh -c "kaigara ./bin/sonic serve"
    labels:
      - "traefik.http.routers.sonic-<%= @name %>.rule=Host(`<%= @config['app']['subdomain'] %>.<%= @config['app']['domain'] %>`) && PathPrefix(`/`)"
      - "traefik.enable=true"
      - "traefik.http.services.sonic-<%= @name %>.loadbalancer.server.port=6969"
      <%- if @config['ssl']['enabled'] -%>
      - "traefik.http.routers.sonic-<%= @name %>.entrypoints=websecure"
      - "traefik.http.routers.sonic-<%= @name %>.tls=true"
      - "traefik.http.routers.sonic-<%= @name %>.tls.certresolver=myresolver"
      <%- else -%>
      - "traefik.http.routers.sonic-<%= @name %>.entrypoints=web"
      <%- end -%>

  tower:
    restart: always
    image: "<%= @config['images']['tower'] %>"
    labels:
      - "traefik.http.routers.tower-<%= @name %>.rule=Host(`<%= @config['app']['subdomain'] %>.<%= @config['app']['domain'] %>`) && PathPrefix(`/tower`)"
      - "traefik.enable=true"
      - "traefik.http.services.tower-<%= @name %>.loadbalancer.server.port=8080"
      <%- if @config['ssl']['enabled'] -%>
      - "traefik.http.routers.tower-<%= @name %>.entrypoints=websecure"
      - "traefik.http.routers.tower-<%= @name %>.tls=true"
      - "traefik.http.routers.tower-<%= @name %>.tls.certresolver=myresolver"
      <%- else -%>
      - "traefik.http.routers.tower-<%= @name %>.entrypoints=web"
      <%- end -%>
