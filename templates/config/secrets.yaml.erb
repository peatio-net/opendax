secrets:
  global:
    scopes:
      public:
      <%- unless @config['app']['wizard_enabled'] %>
        wizard_step: 'false'
      <%- end %>
        minutesUntilAutoLogout: '35'
        withCredentials: 'true'
        finex: 'false'
        gaTrackerKey: <%= @config['app']['gaTrackerKey'] %>
        rangerReconnectPeriod: '1'
        msAlertDisplayTime: '5000'
        incrementalOrderBook: 'true'
        isResizable: 'false'
        isDraggable: 'false'
        languages: ['en', 'ru']
        sessionCheckInterval: '15000'
        balancesFetchInterval: '3000'
        captcha_type: <%= @config['captcha']['type'] %>
        captcha_id: ''
        captchaLogin: 'false'
        usernameEnabled: 'false'
        password_min_entropy: '14'
        passwordEntropyStep: '14'
        sentryEnabled: 'false'
        showLanding: <%= @config['app']['show_landing'] %>
        uploadMinSize: <%= @config['storage']['uploadMinSize'] %>
        uploadMaxSize: <%= @config['storage']['uploadMaxSize'] %>
        kycSteps: [
          'email',
          'phone',
          'profile',
          'document',
          'address',
        ]
        tablePageLimit: '50'
        aml: 'false'
        labelSwitcher: [
            { name: 'email', label: [{ email: 'verified' }] },
            { name: 'phone', label: [{ phone: 'verified' }] },
            { name: 'profile', label: [{ profile: 'verified' }] },
            { name: 'document', label: [{ document: 'verified' }], require_doc: 'true' },
            { name: 'address', label: [{ address: 'verified' }], require_doc: 'true' },
        ]
        plugins: []
        roleTypes: [
            {
                value: 'Admin',
                key: 'admin',
            },
            {
                value: 'Member',
                key: 'member',
            },
            {
                value: 'Super Admin',
                key: 'superadmin',
            },
            {
                value: 'Accountant',
                key: 'accountant',
            },
            {
                value: 'Compliance',
                key: 'compliance',
            },
            {
                value: 'Technical',
                key: 'technical',
            },
            {
                value: 'Support',
                key: 'support',
            },
            {
                value: 'Trader',
                key: 'trader',
            },
            {
                value: 'Broker',
                key: 'broker',
            },
        ]
        allowedRoles: [
          'admin',
          'superadmin',
          'accountant',
          'compliance',
          'support',
          'technical',
          'manager',
        ]
        devMode: 'true'
        minutesBeforeWarningMessage: '1'
      private:
        database_host: <%=  @config['database']['host'] %>
        database_port: "<%=  @config['database']['port'] %>"
        database_user: <%=  @config['database']['user'] %>
        vault_app_name: <%= @config['app']['name'].downcase %>
        vault_address: <%= @config['vault']['host'] %>
        vault_addr: <%= @config['vault']['host'] %>
      secret:
        database_pass: <%= @config['database']['password'] %>

  barong:
    scopes:
      public: {}
      private:
        <%- if @config['database']['adapter'] == 'postgresql' -%>
        database_collation: ""
        database_adapter: postgresql
        <%- elsif @config['database']['adapter'] == 'mysql' -%>
        database_adapter: mysql2
        <%- end -%>
        log_level: debug
        disable_spring: 'true'
        barong_session_expire_time: '7200'
        port: '8080'
        rails_env: production
        barong_sender_email: <%= @config['smtp']['sender_email'] %>
        barong_smtp_user: <%= @config['smtp']['user'] %>
        barong_smtp_logo_link: <%= @config['smtp']['sender_logo'] %>
        barong_sender_name: <%= @config['smtp']['sender_name'] %>
        barong_default_language: en
        barong_kyc_provider: <%= @config['kyc']['provider'] %>
        barong_app_name: <%= @config['app']['name'] %>
        barong_upload_size_min_range: <%= @config['storage']['uploadMinSize'] %>
        barong_upload_size_max_range: <%= @config['storage']['uploadMaxSize'] %>
        barong_uid_prefix: ID
        barong_sms_content_template: "Your verification code for OpenDAX: {{code}}"
        barong_required_docs_expire: 'false'
        barong_domain: <%= ssl_helper('http') %>://<%= @config['app']['subdomain'] %>.<%= @config['app']['domain'] %>
        <%- if @config['kyc']['provider'] == 'kycaid' -%>
        barong_kycaid_sandbox_mode: <%= @config['kyc']['sandbox_mode'] %>
        barong_kycaid_api_endpoint: <%= @config['kyc']['api_endpoint'] %>
        barong_kycaid_callback_url: <%= @config['kyc']['callback_url'] %>
        barong_kycaid_webform_mode: <%= @config['kyc']['webform_mode'] %>
        <%- end -%>
        barong_api_cors_origins: <%= @config['app']['opendax_addr'] %>
        barong_api_cors_max_age: '3600'        
        barong_api_cors_allow_credentials: 'false'        
        rails_max_threads: '20'
        barong_storage_provider: <%= @config['storage']['provider'] %>
        barong_storage_bucket_name: <%= @config['storage']['bucketName'] %>
        barong_storage_endpoint: <%= @config['storage']['endpoint'] %>
        barong_storage_signature_version: "<%= @config['storage']['signatureVersion'] %>"
        barong_storage_region: <%= @config['storage']['region'] %>
        barong_event_api_rabbitmq_host: rabbitmq
        barong_event_api_jwt_algorithm: RS256
        barong_event_api_rabbitmq_port: '5672'
        barong_smtp_host: <%= @config['smtp']['host'] %>
        barong_smtp_port: "<%= @config['smtp']['port'] %>"
        barong_captcha: <%= @config['captcha']['type'] %>
        barong_password_min_entropy: '14'
        barong_password_use_dictionary: 'false'
        barong_csrf_protection: '<%= @config['app']['csrfEnabled'] %>'
        barong_api_data_masking_enabled: 'false'



      secret:
        jwt_private_key_path: /secrets/barong.key
        barong_vault_app_name: <%= @config['app']['name'].downcase %>
        barong_vault_address: <%= @config['vault']['host'] %>
        database_name: <%= @config['database']['barong'] %>
        barong_redis_url: redis://redis:6379
        redis_url: redis://redis:6379
        <%- if @config['kyc']['provider'] == 'kycaid' -%>
        barong_kycaid_authorization_token: <%= @config['kyc']['authorization_token'] %>
        <%- end -%>
        barong_event_api_rabbitmq_username: guest
        barong_smtp_password: <%= @config['smtp']['password'] %>
        <%- if @config['twilio']['enabled'] -%>
        barong_twilio_account_sid: <%= @config['twilio']['account_sid'] %>
        barong_twilio_auth_token: <%= @config['twilio']['auth_token'] %>
        barong_twilio_phone_number: "<%= @config['twilio']['phone_number'] %>"
        barong_phone_verification: twilio_sms
        <%- end -%>
        <%- if @config['captcha']['type'] == 'recaptcha' -%>
        barong_recaptcha_site_key: <%= @config['captcha']['siteKey'] %>
        barong_recaptcha_secret_key: <%= @config['captcha']['secretKey'] %>
        <%- elsif @config['captcha']['type'] == 'geetest' -%>
        barong_geetest_id: <%= @config['captcha']['siteKey'] %>
        barong_geetest_key: <%= @config['captcha']['secretKey'] %>
        <%- end -%>
        barong_storage_access_key: <%= @config['storage']['accessKey'] %>
        barong_storage_secret_key: <%= @config['storage']['secretKey'] %>
        barong_event_api_jwt_private_key: <%= @barong_private_key %>
        barong_event_api_rabbitmq_password: guest
        secret_key_base: faiba2shei0Ae5gahCh4aipoh3meyaFi

  sonic:
    scopes:
      public: {}
      private:
        peatio_url: http://peatio:8080/api/v2/management
        barong_url: http://barong:8080/api/v2/management
        database_name: sonic
        jwt_issuer: sonic
        jwt_algo: RS256
        vault_addr: <%= @config['vault']['host'] %>
        deployment_id: <%= @config['app']['name'].downcase %>
        opendax_addr: <%= @config['app']['opendax_addr'] %>
        xln_enabled: false
      secret:
        jwt_private_key: <%= @sonic_private_key %>
        sonic_public_key: <%= @sonic_public_key %>
        peatio_public_key: <%= @peatio_public_key %>
        barong_public_key: <%= @barong_public_key %>

  peatio:
    scopes:
      public: {}
      private:
        log_level: debug
        port: '8080'
        <%- if @config['database']['adapter'] == 'postgresql' -%>
        database_collation: ""
        database_adapter: postgresql
        <%- elsif @config['database']['adapter'] == 'mysql' -%>
        database_adapter: mysql2
        <%- end -%>
        rails_root: /home/app
        url_host: <%= @config['app']['subdomain'] %>.<%= @config['app']['domain'] %>
        admin: admin@barong.io
        database_name: <%= @config['database']['peatio'] %>
        redis_url: redis://redis:6379
        rabbitmq_host: rabbitmq
        event_api_rabbitmq_host: rabbitmq
        markets_config: /opt/peatio/config/seed/markets.yml
        currencies_config: /opt/peatio/config/seed/currencies.yml
        management_api_v1_config: /opt/peatio/config/management_api_v1.yml
        jwt_audience: peatio,barong
        jwt_public_key: <%= @barong_public_key %>
        # Use the following value to connect to XLN testnet:
        #  "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxUFVsK2N4QjBKMXpGWGxsbUkrcgpma0V0dEhzaWgrdUFBYlNwZFd5VndwZmY2ZE4xMlZpRmNBWmFmcXBGSitkWTdQSjNQdDBIWmNuL0ltS3F6T0YwCnpkT3dSbHZtM2FvYlJpQWk1UXhpQStDZkJHUEJ1WGJ4djdWOUlVbmNscFdDUHRtM3pLZmJjayszUGZCVnZxUVIKTlVydUpMSWpWSW84aHlNMGd4dmNhVVRUMG1iZ1B4VktSd0dQQTZVSVFpQlg0L3MzM29SZ1M2MFpkN2NjNHZ1UApaK1FEZ3EzN3M0d09aVmY2ZWVOY2VsT29RMWtiT1c5NWYxMjhNaGNBTGtyeUJYWHpVR2ZMbnZSTDAwNlpaNmFPCmhKRXVGRkdiT1dNY1llUW42QU9UM1FnNVorajV2bnRHVlViVk9WK0pMbTRsZEp1V2JYUk1BampPTUdTR2Z3WnIKa3dJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg=="
        openfinex_cloud_public_key: "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFQUpCZXhhWlFwd2o0bXJRRDQyZG9laWtSNUwyVgo3dmRYNUdPY1p0Y1o5OWo1bktOa3EydXJXZTNPVm1hWndEQ3FYcmxoZ0YwY3hHU0lKbUhuUHg4SGlnPT0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg=="
        influxdb_host: influxdb
        event_api_jwt_algorithm: RS256
        event_api_rabbitmq_port: '5672'
        minimum_member_level_for_deposit: '1'
        minimum_member_level_for_withdraw: '3'
        minimum_member_level_for_trading: '2'
        force_secure_connection: 'false'
        max_currencies: 200
        max_market: 500
      secret:
        peatio_jwt_private_key: <%= @peatio_private_key %>
        event_api_jwt_private_key: <%= @peatio_private_key %>
        event_api_rabbitmq_username: guest
        event_api_rabbitmq_password: guest
        secret_key_base: faiba2shei0Ae5gahCh4aipoh3meyaFi

  finex:
    scopes:
      public: {}
      private:
        finex_log_level: warn
        finex_influx_host: influxdb
        finex_influx_port: '8086'
        finex_influx_scheme: http
        finex_database_driver: <%= @config['database']['adapter'] %>
        finex_database_host: db
        finex_database_port: <%= @config['database']['port'] %>
        finex_vault_host: <%= @config['vault']['host'] %>
        finex_vault_app: <%= @config['app']['name'].downcase %>
        finex_messaging_driver: amqp
        finex_messaging_host: rabbitmq
        finex_messaging_port: '5672'
      secret:
        finex_license_key: generated by sonic
        finex_influx_database: peatio_production
        finex_influx_username: ""
        finex_database_name: <%= @config['database']['peatio'] %>
        finex_database_username: <%= @config['database']['user'] %>
        finex_database_password: <%= @config['database']['password'] %>
        finex_vault_token: <%= @config['vault']['finex_engine_token'] %>
        finex_messaging_username: guest
        finex_messaging_password: guest

  rango:
    scopes:
      private:
        ranger_host: 0.0.0.0
        ranger_port: '8080'
        ranger_connect_secure: "false"
        log_level: info
        rabbitmq_host: rabbitmq
        jwt_public_key: <%= @barong_public_key %>

  electrumd_btc:
    scopes:
      private:
        testnet: "<%= @config['electrumd_btc']['testnet'] %>"
        segwit: "<%= @config['electrumd_btc']['segwit'] %>"
      secret:
        electrum_user: "<%= @config['electrumd_btc']['user'] %>"
        electrum_password: "<%= @config['electrumd_btc']['password'] %>"
        wallet_passphrase: "<%= @config['electrumd_btc']['wallet_passphrase'] %>"

  electrumd_ltc:
    scopes:
      private:
        testnet: "<%= @config['electrumd_ltc']['testnet'] %>"
        segwit: "<%= @config['electrumd_ltc']['segwit'] %>"
      secret:
        electrum_user: "<%= @config['electrumd_ltc']['user'] %>"
        electrum_password: "<%= @config['electrumd_ltc']['password'] %>"
        wallet_passphrase: "<%= @config['electrumd_ltc']['wallet_passphrase'] %>"
